import random
import time

from api.views import generate_response
from vk_api_integration import get_group_info
from .keyboards import main_menu_keyboard, group_analysis_keyboard
from .utils import send_message, extract_group_id, generate_message_text, set_user_state, get_user_state

handlers = []


def message_handler(user_state=None, text=None):
    def decorator(func):
        handlers.append({
            'user_state': user_state,
            'text': text,
            'func': func
        })
        return func

    return decorator


def handle_message(user_id, message_text):
    state = get_user_state(user_id)
    for handler in handlers:
        if handler['user_state'] == state and (handler['text'] is None or handler['text'] == message_text):
            handler['func'](user_id, message_text)
            return
    send_message(user_id, '–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n–ê—É–¥–∏—Ç', main_menu_keyboard)


@message_handler(user_state='idle', text='–ù–∞—á–∞—Ç—å')
def start_handler(user_id, message_text):
    response_message = '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º. –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º!'
    send_message(user_id, response_message, main_menu_keyboard)


@message_handler(user_state='idle', text='–ê—É–¥–∏—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞')
@message_handler(user_state='idle', text='–ê—É–¥–∏—Ç')
def audit_handler(user_id, message_text):
    response_message = '–î–ª—è –∞—É–¥–∏—Ç–∞ –ø—Ä–∏—à–ª–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å.'
    set_user_state(user_id, 'awaiting_link')
    send_message(user_id, response_message, group_analysis_keyboard)


@message_handler(user_state='awaiting_link', text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
def main_menu_handler(user_id, message_text):
    response_message = '–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
    set_user_state(user_id, 'idle')
    send_message(user_id, response_message, main_menu_keyboard)


@message_handler(user_state='awaiting_link')
def group_link_handler(user_id, message_text):
    group_id = extract_group_id(message_text)
    if group_id:
        group_info = get_group_info(group_id)
        if group_info:
            send_message(user_id, '–ê—É–¥–∏—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –Ω–∞—á–∞–ª—Å—è ‚åõÔ∏è–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 1-3 –º–∏–Ω—É—Ç.')
            group_info = generate_response(group_info)
            response_messages = generate_message_text(group_info)
            pivot = len(response_messages) // 2
            time.sleep(random.randint(5, 8))
            send_message(user_id, ''.join(response_messages[:pivot]))
            send_message(user_id, ''.join(response_messages[pivot:]))
            send_message(user_id, 'üîé –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ "–ê—É–¥–∏—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞"',
                         main_menu_keyboard)
            set_user_state(user_id, 'idle')
        else:
            send_message(user_id,
                         '–°–æ–æ–±—â–µ—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –≤–µ—Ä–Ω–∞ –∏ –≤–µ–¥–µ—Ç –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≥—Ä—É–ø–ø—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.')
    else:
        send_message(user_id,
                     '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Å—ã–ª–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É: https://vk.com/‚Ä¶ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
